name: CI/CD workflow

on: 
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.17.1'
      
      - name: Make run file Executable
        run: chmod +x run

      - name: Install dependencies
        run: ./run install

      - name: Run tests
        run: |
          export GITHUB_TOKEN='${{ secrets.TOKEN }}'
          ./run test


  delpoy:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout files
      uses: actions/checkout@v3
    
    - name: Copy Files to EC2
      uses: appleboy/scp-action@v1.1.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          cd /webapp/  # Navigate to your application directory
          rm -rf *  # Remove all existing files
          rsync -rvz . ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/webapp/  # Copy all files from your repository to the EC2 instance


#      - name: SSH Commands to Restart Application
#        uses: appleboy/ssh-action@v0.1.0
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USER }}
#          key: ${{ secrets.EC2_KEY }}
#          script: |
#            cd /path/on/ec2/  # Navigate to your application directory
#            npm install  # Reinstall dependencies if necessary
#            pm2 restart all  # Restart the application using PM2 (or your method)

    # deploy:
    #     runs-on: ubuntu-latest
    #     needs: build

    #     steps:
    #         - uses: actions/checkout@v2

    #         - name: Configure AWS Credentials
    #           uses: aws-actions/configure-aws-credentials@v2  # CHECK THIS SECTION
    #           with:
    #             aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #             aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #             aws-region: us-east-1
            
            
    #         - name: Deploy to Lambda
    #           run: |
    #             aws lambda update-function-code --function-name myLambdaFunction --zip-file fileb://function.zip

    #         - name: Deploy to S3
    #           run: |
    #             aws s3 sync ./my-local-directory s3://my-s3-bucket
            
    #         - name: EC2 Deployment
    #           run: |
    #             ssh -i "my-key.pem" ec2-user@my-ec2-instance "cd /path/to/deployment && ./deploy.sh"
            
    #         - name: CodeBuilder
    #           run: |
    #             aws codebuild start-build --project-name my-codebuild-project
        

                
                
#    build:
#        runs-on: ubuntu-latest
#
#        steps:
#            - uses: actions/checkout@v2

#            - name: Setup Node.js version 18.17.1
#              uses: actions/setup-node@v1
#              with:
#                node-version: '18.17.1'
#
#            - name: Remove node_modules
#              run: rm -rf node_modules

#            - name: Install dependencies
#              run: npm install
            
#            - name: Run tests
#              env:
#                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#              run: ./run test